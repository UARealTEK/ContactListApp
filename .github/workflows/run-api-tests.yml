name: Run Tests and Deploy Allure Report

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:
    inputs:
      suite:
        description: 'Test suite to run (api, ui, both)'
        required: true
        default: 'both'

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Show input parameters
        run: echo "suite = ${{ github.event.inputs.suite }}"

  run-api-tests:
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.suite == 'api' || github.event.inputs.suite == 'both' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '22'

      - uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Run API tests
        run: |
          echo "Running API tests..."
          mvn clean test -Djunit.jupiter.tags=api -Dallure.results.directory=target/allure-results/api

  run-ui-tests:
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.suite == 'ui' || github.event.inputs.suite == 'both' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '22'

      - uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Run UI tests
        run: |
          echo "Running UI tests..."
          mvn clean test -Djunit.jupiter.tags=ui -Dallure.results.directory=target/allure-results/ui

  generate-report:
    needs: [run-api-tests, run-ui-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download and install Allure CLI
        run: |
          curl -o allure.tgz -L https://github.com/allure-framework/allure2/releases/download/2.24.0/allure-2.24.0.tgz
          tar -xzf allure.tgz
          sudo mv allure-2.24.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure

      - name: Merge test results
        run: |
          mkdir -p target/allure-results
          cp -r target/allure-results/api/* target/allure-results/ || echo "No API results"
          cp -r target/allure-results/ui/* target/allure-results/ || echo "No UI results"

      - name: Generate Combined Allure Report
        run: allure generate target/allure-results --clean -o target/allure-report

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./target/allure-report

  pages:
    needs: generate-report
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
